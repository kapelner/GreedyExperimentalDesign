% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gurobi_numerical_optimization_search.R
\name{initGurobiNumericalOptimizationExperimentalDesignObject}
\alias{initGurobiNumericalOptimizationExperimentalDesignObject}
\title{Begin Gurobi Optimized Search}
\usage{
initGurobiNumericalOptimizationExperimentalDesignObject(
  X = NULL,
  objective = "mahal_dist",
  Kgram = NULL,
  num_cores = 1,
  time_limit_min = 5,
  node_limit = NULL,
  max_solutions = NULL,
  verbose = TRUE,
  log_file = ""
)
}
\arguments{
\item{X}{The design matrix with $n$ rows (one for each subject) and $p$ columns 
(one for each measurement on the subject). This is the design matrix you wish 
to search for a more optimal design.}

\item{objective}{The objective function to use when searching design space. This is a string
with valid values "\code{mahal_dist}" (the default) or "\code{kernel}".}

\item{Kgram}{If the \code{objective = kernel}, this argument is required to be an \code{n x n} matrix whose
entries are the evaluation of the kernel function between subject i and subject j. Default is \code{NULL}.}

\item{num_cores}{The number of CPU cores you wish to use during the search. The default is \code{1}.}

\item{time_limit_min}{The maximum amount of time the optimizer can run for in minutes. The default is \code{5}.}

\item{node_limit}{The maximum number of nodes Gurobi should explore. Default is \code{NULL} for no limit.}

\item{max_solutions}{The maximum number of solutions Gurobi should retain incidentally while looking for one optimal 
(if possible given the time limit and constraint of the node limit). The default is 
\code{NULL} for only the best.}

\item{verbose}{Should Gurobi print its log to screen? Default is \code{TRUE}.}

\item{log_file}{Log filename for Gurobi e.g. \code{my_log.txt}. Default is \code{""} for no file log.}
}
\value{
An object of type \code{optimal_experimental_design_search} which can be further operated upon
}
\description{
This method creates an object of type optimal_experimental_design and will immediately initiate
a search through $1_{T}$ space for forced balance designs. Make sure you setup Gurobi properly first. This means
applying for a license, downloading, installing, registering it on your computer using the \code{grbgetkey} command
with the license file in the default directory. Then, in R, add it to the path within R using something like 
\code{.jaddClassPath("/gurobi801/win64/lib/gurobi.jar")}. If this is not setup properly - you are in for a world of 
pain with cryptic errors! Currently, this method does not return multiple vectors. This will be improved in a later 
version. If you want this functionality now, use the hacked-up method \code{gurobi_multiple_designs}.
}
\author{
Adam Kapelner and Bracha Blau
}
